apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-exporter.exporterDeploymentName" . }}
  namespace: {{ .Values.exporterNamespaceName }}
  labels:
    {{- include "kafka-exporter.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kafka-exporter.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
      {{- include "kafka-exporter.sysdigAnnotations" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kafka-exporter.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        {{- if not .Values.ubi }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- end }}
        {{- if .Values.ubi }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}-ubi"
        {{- end }}   
        args:
          - '--verbosity={{ .Values.verbosity }}'
          {{- if .Values.sarama.logEnabled }}
          - '--log.enable-sarama'
          {{- end }}
          {{- range $server := .Values.kafkaServer }}
          - '--kafka.server={{ $server }}'
          {{- end }}
          {{- if .Values.kafkaBrokerVersion }}
          - '--kafka.version={{ .Values.kafkaBrokerVersion }}'
          {{- end }}
          {{- if .Values.tls.enabled }}
          - '--tls.enabled'
          {{- if .Values.tls.mountPath }}
          - '--tls.ca-file={{ .Values.tls.mountPath }}/ca.crt'
          - '--tls.cert-file={{ .Values.tls.mountPath }}/tls.crt'
          - '--tls.key-file={{ .Values.tls.mountPath }}/tls.key'
          {{- end }}
          {{- if .Values.tls.insecureSkipVerify }}
          - '--tls.insecure-skip-tls-verify'
          {{- else if .Values.tls.serverName }}
          - '--tls.server-name={{ .Values.tls.serverName }}'
          {{- end }}
          {{- end }}
          {{- if .Values.sasl.enabled }}
          - '--sasl.enabled'
          {{- if not .Values.sasl.handshake }}
          - '--sasl.handshake=false'
          {{- end }}
          {{- if .Values.sasl.scram.enabled }}
          - '--sasl.username=$(SCRAM_USERNAME)'
          - '--sasl.password=$(SCRAM_PASSWORD)'
          - '--sasl.mechanism={{ .Values.sasl.scram.mechanism }}'
          {{- end }}
          {{- if .Values.sasl.kerberos.enabled }}
          - '--sasl.service-name={{ .Values.sasl.kerberos.serviceName }}'
          - '--sasl.kerberos-config-path={{ .Values.sasl.kerberos.mountPath }}/kerberos.conf'
          - '--sasl.realm={{ .Values.sasl.kerberos.realm }}'
          - '--sasl.keytab-path={{ .Values.sasl.kerberos.mountPath }}/kerberos.keytab'
          - '--sasl.kerberos-auth-type={{ .Values.sasl.kerberos.kerberosAuthType }}'
          {{- end }}
          {{- if .Values.server.tls.enabled }}
          - '--server.tls.ca-file={{ .Values.server.tls.mountPath }}/ca.crt'
          - '--server.tls.cert-file={{ .Values.server.tls.mountPath }}/tls.crt'
          - '--server.tls.key-file={{ .Values.server.tls.mountPath }}/tls.key'
          - '--server.tls.mutual-auth-enabled={{ .Values.server.tls.mutualAuthEnabled }}'
          {{- end }}
          {{- end }}
          {{- if .Values.extraArgs }}
          {{- range .Values.extraArgs  }}
          - {{ . }}
          {{- end }}
          {{- end }}
        env:
          {{- range $env := .Values.env }}
          - name: {{ $env.name }}
            value: {{ $env.value }}
          {{- end }}
          {{- if .Values.sasl.scram.enabled }}
          - name: SCRAM_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "kafka-exporter.saslScramSecretName" . }}
                key: username
          - name: SCRAM_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "kafka-exporter.saslScramSecretName" . }}
                key: password
          {{- end }}
        ports:
          - name: metrics
            containerPort: 9308
            protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 9
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 9

        resources:
          {{- toYaml .Values.resources | nindent 12 }}

        {{- if or (and (.Values.tls.enabled) (.Values.tls.mountPath ) ) (and (.Values.sasl.enabled) (.Values.sasl.kerberos.mountPath) ) (and (.Values.server.tls.enabled) (.Values.server.tls.mountPath ) ) }}
        volumeMounts:
          {{- if and (.Values.tls.enabled) (.Values.tls.mountPath ) }}
          - mountPath: {{ .Values.tls.mountPath }}
            name: kafka-exporter-client-certs
            readOnly: true
          {{- end }}
          {{- if and (.Values.sasl.enabled) (.Values.sasl.kerberos.mountPath) }}
          - mountPath: {{ .Values.sasl.kerberos.mountPath }}
            name: kafka-exporter-kerberos
            readOnly: true
          {{- end }}
          {{- if and (.Values.server.tls.enabled) (.Values.server.tls.mountPath ) }}
          - mountPath: {{ .Values.server.tls.mountPath }}
            name: kafka-exporter-server-certs
            readOnly: true
          {{- end }}
        {{- end }}

      {{- if or (and (.Values.tls.enabled) (.Values.tls.mountPath ) ) (and (.Values.sasl.enabled) (.Values.sasl.kerberos.mountPath) ) (and (.Values.server.tls.enabled) (.Values.server.tls.mountPath ) ) }}
      volumes:
        {{- if and (.Values.tls.enabled) (.Values.tls.mountPath ) }}
        - name: kafka-exporter-client-certs
          secret:
            secretName: {{ .Values.tls.secretName }}
        {{- end }}
        {{- if and (.Values.sasl.enabled) (.Values.sasl.kerberos.mountPath) }}
        - name: kafka-exporter-kerberos
          secret:
            secretName: {{ .Values.sasl.kerberos.secretName }}
        {{- end }}
        {{- if and (.Values.server.tls.enabled) (.Values.server.tls.mountPath ) }}
        - name: kafka-exporter-server-certs
          secret:
            secretName: {{ .Values.server.tls.secretName }}
        {{- end }}
      {{- end }}