apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elasticsearch-exporter.exporterDeploymentName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "elasticsearch-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "elasticsearch-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if .Values.sysdig.namespaceName }}
      {{- include "elasticsearch-exporter.sysdigAnnotations" . | nindent 8 }}
      {{ else }}
      {{- include "elasticsearch-exporter.prometheusAnnotations" . | nindent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "elasticsearch-exporter.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if not .Values.ubi }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          {{- if .Values.ubi }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}-ubi"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
          - elasticsearch_exporter
          - --es.all
          - --es.uri={{ .Values.url.http }}://{{ .Values.url.name }}:{{ .Values.url.port }}
          - --es.indices
          - --es.indices_settings
          - --es.shards
          - --es.snapshots
          - --es.cluster_settings
          - --es.timeout=60s
          {{- if .Values.tlsmode }}
          - --es.ca=/usr/share/elasticsearch/config/certs/ca.crt
          {{- end }}
          {{- if not .Values.tlsmode }}
          - --es.ssl-skip-verify
          {{- end}}
          - --web.listen-address=:{{ .Values.exporter.port }}
          - --web.telemetry-path=/metrics
          env:
          {{- if .Values.url.secretName }}
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.url.secretName }}
                  key: {{ .Values.url.usernameKey }}
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.url.secretName }}
                  key: {{ .Values.url.passwordKey }}
          {{ end }}
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - sleep 20
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          {{- if .Values.tlsmode }}
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/config/certs/
            name: elasticsearch-tls-certs
          {{ end }}
          ports:
          - containerPort: {{ .Values.exporter.port }}
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{ end }}
      {{- if .Values.tlsmode }}
      volumes:
      - name: elasticsearch-tls-certs
        secret:
          defaultMode: 256
          {{- if eq .Values.eck.enabled "true" }}
          secretName: {{ .Values.eck.cluster.name }}-es-{{ .Values.eck.cluster.nodeSet }}
          items:
            - key: ca.crt
              path: ca.crt
          {{ else }}
          secretName: {{ .Values.secretTLS }}
          {{ end }}
      {{ end }}
